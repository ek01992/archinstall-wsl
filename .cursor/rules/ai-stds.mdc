---
description: "These standards provide guidelines for safe, effective AI-assisted development, focusing on security, workflow, and quality."
alwaysApply: true
---

# AI Standards

## Overview

These standards provide guidelines for safe, effective AI-assisted development, focusing on security, workflow, and quality.

## Foundation and Team Readiness

- Assess team and codebase readiness before AI integration.
- Store AI standards in versioned `.ai/` directories.
- Run AI tools in isolated, read-only environments.
- Start small and scale progressively.

## Workflow and Development Process

- Use specification-driven development with clear authority levels.
- Adopt test-first AI development.
- Build iteratively with daily feedback.
- Follow a 9-stage lifecycle from definition to monitoring.
- Limit tasks to 4-8 hours; use atomic tasks for AI agents.
- Break features into testable work items.

## Quality and Testing

- Generate comprehensive test suites from specifications.
- Ensure test-to-specification traceability.
- Design observable systems with detailed logging.
- Validate all AI outputs via tests and reviews.

## Parallel and Multi-Agent Development

- Use isolation for safe parallelization.
- Implement resource locking and atomic decomposition.
- Enable shared memory for coordination.
- Detect and resolve conflicts automatically.

## Knowledge and Context Management

- Capture high-impact patterns and failures in searchable formats.
- Optimize context windows by task complexity.
- Use visual scaffolding like diagrams.
- Version knowledge assets as code.

## Tool Design and Integration

- Design tools with smart defaults and extensibility.
- Include self-documenting commands and hooks.
- Use modular architecture and specialized subagents.

## Operations and Automation

- Generate policies and configurations from requirements.
- Aggregate security findings and establish baselines.
- Automate incident response and readiness reviews.

## Anti-Patterns

- Avoid rushing without assessment or structured processes.
- Prevent uncoordinated parallelization and black-box systems.
- Don't use oversized models or manual translations.

Follow phased implementation: foundation, development, advanced, operations.
